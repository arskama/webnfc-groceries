this.workbox=this.workbox||{},this.workbox.rangeRequests=function(u,s){"use strict";try{self.workbox.v["workbox:range-requests:3.6.3"]=1}catch(n){}let w=(g=babelHelpers.asyncToGenerator(function*(n,t){try{const c=n.headers.get("range");if(!c)throw new s.WorkboxError("no-range-header");const f=function(h){const r=h.trim().toLowerCase();if(!r.startsWith("bytes="))throw new s.WorkboxError("unit-must-be-bytes",{normalizedRangeHeader:r});if(r.includes(","))throw new s.WorkboxError("single-range-only",{normalizedRangeHeader:r});const e=/(\d*)-(\d*)/.exec(r);if(e===null||!e[1]&&!e[2])throw new s.WorkboxError("invalid-range-values",{normalizedRangeHeader:r});return{start:e[1]===""?null:Number(e[1]),end:e[2]===""?null:Number(e[2])}}(c),d=yield t.blob(),a=function(h,r,e){const o=h.size;if(e>o||r<0)throw new s.WorkboxError("range-not-satisfiable",{size:o,end:e,start:r});let i,l;return r===null?(i=o-e,l=o):e===null?(i=r,l=o):(i=r,l=e+1),{start:i,end:l}}(d,f.start,f.end),x=d.slice(a.start,a.end),k=x.size,b=new Response(x,{status:206,statusText:"Partial Content",headers:t.headers});return b.headers.set("Content-Length",k),b.headers.set("Content-Range",`bytes ${a.start}-${a.end-1}/`+d.size),b}catch(c){return new Response("",{status:416,statusText:"Range Not Satisfiable"})}}),function(n,t){return g.apply(this,arguments)});var g;return u.createPartialResponse=w,u.Plugin=class{cachedResponseWillBeUsed({request:n,cachedResponse:t}){return babelHelpers.asyncToGenerator(function*(){return t&&n.headers.has("range")?yield w(n,t):t})()}},u}({},workbox.core._private);
