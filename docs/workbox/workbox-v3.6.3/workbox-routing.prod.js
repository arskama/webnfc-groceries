this.workbox=this.workbox||{},this.workbox.routing=function(a,g){"use strict";try{self.workbox.v["workbox:routing:3.6.3"]=1}catch(e){}const w="GET";var c=e=>e&&typeof e=="object"?e:{handle:e};class n{constructor(e,t,s){this.handler=c(t),this.match=e,this.method=s||w}}class l extends n{constructor(e,t,s){super(({url:r})=>{const o=e.exec(r.href);return o?r.origin!==location.origin&&o.index!==0?null:o.slice(1):null},t,s)}}class d{constructor(){this.t=new Map}handleRequest(e){const t=new URL(e.request.url);if(!t.protocol.startsWith("http"))return;let s=null,r=null,o=null;const h=this.e(e,t);if(r=h.handler,o=h.params,s=h.route,!r&&this.r&&(r=this.r),!r)return;let i;try{i=r.handle({url:t,event:e,params:o})}catch(u){i=Promise.reject(u)}return i&&this.s&&(i=i.catch(u=>this.s.handle({url:t,event:e,err:u}))),i}e(e,t){const s=this.t.get(e.request.method)||[];for(const r of s){let o=r.match({url:t,event:e});if(o)return(Array.isArray(o)&&o.length===0||o.constructor===Object&&Object.keys(o).length===0||o===!0)&&(o=void 0),{route:r,params:o,handler:r.handler}}return{handler:void 0,params:void 0}}setDefaultHandler(e){this.r=c(e)}setCatchHandler(e){this.s=c(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new a.WorkboxError("unregister-route-but-not-found-with-method",{method:e.method});const t=this.t.get(e.method).indexOf(e);if(!(t>-1))throw new a.WorkboxError("unregister-route-route-not-registered");this.t.get(e.method).splice(t,1)}}class f extends n{constructor(e,{whitelist:t=[/./],blacklist:s=[]}={}){super((...r)=>this.n(...r),e),this.o=t,this.i=s}n({event:e,url:t}){if(e.request.mode!=="navigate")return!1;const s=t.pathname+t.search;return!this.i.some(r=>r.test(s))&&!!this.o.some(r=>r.test(s))}}var p=Object.freeze({RegExpRoute:l,Route:n,Router:d,NavigationRoute:f});const m=new class extends d{registerRoute(e,t,s="GET"){let r;if(typeof e=="string"){const o=new URL(e,location);r=new n(({url:h})=>h.href===o.href,t,s)}else if(e instanceof RegExp)r=new l(e,t,s);else if(typeof e=="function")r=new n(e,t,s);else{if(!(e instanceof n))throw new a.WorkboxError("unsupported-route-type",{moduleName:"workbox-routing",className:"DefaultRouter",funcName:"registerRoute",paramName:"capture"});r=e}return super.registerRoute(r),r}registerNavigationRoute(e,t={}){const s=g.cacheNames.getPrecacheName(t.cacheName),r=new f(()=>caches.match(e,{cacheName:s}).then(o=>{if(o)return o;throw new Error(`The cache ${s} did not have an entry for ${e}.`)}).catch(o=>fetch(e)),{whitelist:t.whitelist,blacklist:t.blacklist});return super.registerRoute(r),r}};return self.addEventListener("fetch",e=>{const t=m.handleRequest(e);t&&e.respondWith(t)}),Object.assign(m,p)}(workbox.core._private,workbox.core._private);
