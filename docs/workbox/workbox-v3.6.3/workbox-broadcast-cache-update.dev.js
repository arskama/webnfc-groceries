this.workbox=this.workbox||{},this.workbox.broadcastUpdate=function(c,d,n,r){"use strict";try{self.workbox.v["workbox:broadcast-cache-update:3.6.3"]=1}catch(e){}const p=(e,a,s)=>{if(!(e instanceof Response&&a instanceof Response))throw new d.WorkboxError("invalid-responses-are-same-args");const t=s.some(o=>e.headers.has(o)&&a.headers.has(o));return t?s.every(o=>{const l=e.headers.has(o)===a.headers.has(o),b=e.headers.get(o)===a.headers.get(o);return l&&b}):(n.logger.warn("Unable to determine where the response has been updated because none of the headers that would be checked are present."),n.logger.debug("Attempting to compare the following: ",e,a,s),!0)};var h={CACHE_UPDATED:"CACHE_UPDATED"};const i=(e,a,s,t)=>{if(!("BroadcastChannel"in self&&e)){n.logger.debug(`${s} was updated, but the Broadcast Channel API is not available in the current browser.`);return}r.assert.isInstance(e,BroadcastChannel,{moduleName:"workbox-broadcast-cache-update",className:"~",funcName:"broadcastUpdate",paramName:"channel"}),r.assert.isType(a,"string",{moduleName:"workbox-broadcast-cache-update",className:"~",funcName:"broadcastUpdate",paramName:"cacheName"}),r.assert.isType(s,"string",{moduleName:"workbox-broadcast-cache-update",className:"~",funcName:"broadcastUpdate",paramName:"url"}),r.assert.isType(t,"string",{moduleName:"workbox-broadcast-cache-update",className:"~",funcName:"broadcastUpdate",paramName:"source"}),e.postMessage({type:h.CACHE_UPDATED,meta:t,payload:{cacheName:a,updatedUrl:s}})};class m{constructor(e,{headersToCheck:a,source:s}={}){if(typeof e!="string"||e.length===0)throw new d.WorkboxError("channel-name-required");this._channelName=e,this._headersToCheck=a||["content-length","etag","last-modified"],this._source=s||"workbox-broadcast-cache-update"}_getChannel(){return"BroadcastChannel"in self&&!this._channel&&(this._channel=new BroadcastChannel(this._channelName)),this._channel}notifyIfUpdated(e,a,s,t){p(e,a,this._headersToCheck)||i(this._getChannel(),t,s,this._source)}}class u{constructor(e,a){this._broadcastUpdate=new m(e,a)}cacheDidUpdate({cacheName:e,oldResponse:a,newResponse:s,request:t}){if(r.assert.isType(e,"string",{moduleName:"workbox-broadcast-cache-update",className:"Plugin",funcName:"cacheDidUpdate",paramName:"cacheName"}),r.assert.isInstance(s,Response,{moduleName:"workbox-broadcast-cache-update",className:"Plugin",funcName:"cacheDidUpdate",paramName:"newResponse"}),r.assert.isInstance(t,Request,{moduleName:"workbox-broadcast-cache-update",className:"Plugin",funcName:"cacheDidUpdate",paramName:"request"}),!a)return;this._broadcastUpdate.notifyIfUpdated(a,s,t.url,e)}}return c.BroadcastCacheUpdate=m,c.Plugin=u,c.broadcastUpdate=i,c.messageTypes=h,c}({},workbox.core._private,workbox.core._private,workbox.core._private);
